/* generated by JSetup v0.95 :  at 4 de jan de 2022 23:12:56 */
package com.robsonmrsp.netflics.service;

import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;
import com.robsonmrsp.netflics.core.model.Tenant ;

import com.robsonmrsp.netflics.model.Role;
import com.robsonmrsp.netflics.persistence.RoleRepository;
import com.robsonmrsp.netflics.persistence.RoleSpecificationHelper;
import com.robsonmrsp.netflics.model.filter.FilterRole;

import com.robsonmrsp.netflics.core.persistence.pagination.Pager;
import com.robsonmrsp.netflics.core.rs.exception.ValidationException;
import com.robsonmrsp.netflics.core.persistence.pagination.SearchParameters;
import com.robsonmrsp.netflics.core.utils.DateUtil;
import com.robsonmrsp.netflics.core.utils.Util;

@Service
@Transactional
public class RoleServiceImp implements RoleService {

	public static final Logger LOGGER = LoggerFactory.getLogger(RoleServiceImp.class);
	
	@Autowired
	RoleRepository roleRepository;
	
	public Optional<Role> get(Integer id) {
		return roleRepository.findById(id);
	}

	public Pager<Role> get(SearchParameters<FilterRole> searchParams) {
		Pageable pageRequest = searchParams.getPageRequest();

		Page<Role> page = roleRepository.findAll(RoleSpecificationHelper.filter(searchParams), pageRequest);

		return new Pager<Role>(page.getContent(), searchParams.getPage(), searchParams.getPageSize(),
		        searchParams.getOrder(), searchParams.getOrderBy(), page.getTotalElements());
	}
	
	public Boolean delete(Integer id) {
		Optional<Role> optional = this.get(id);
		if (optional.isPresent()) {
			roleRepository.delete(optional.get());
		}
		return true;
	}

	public Role save(Role entity) {
		return roleRepository.save(entity);
	}

	public Role update(Role entity) {
		return roleRepository.save(entity);
	}
}

//generated by JSetup v0.95 :  at 4 de jan de 2022 23:12:56