/* generated by JSetup v0.95 :  at 3 de jan de 2022 23:41:20 */
define(function(require) {
	var _ = require('adapters/underscore-adapter');
	var $ = require('adapters/jquery-adapter');
	var util = require('utilities/utils');
	var JSetup = require('views/components/JSetup');

	var TemplateFormActors = require('text!views/actor/tpl/FormActorTemplate.html');
	
	var Actor = require('models/Actor');
	
	var FormActors = JSetup.View.extend({
		template : _.template(TemplateFormActors),

		/** The declared form Regions. */
		regions : {
		},

		/** The form events you'd like to listen */
		events : {
			'click 	.save' : 'save',
			'click 	.save-continue' : 'saveAndContinue',
		},
		/** All the important fields must be here. */
		ui : {
			inputId : '#inputId',
			saveButton : '.button-saving',
			inputBirthDate : '#inputBirthDate',
			inputName : '#inputName',
			form : '#formActor',
		},
		
		/** First function called, like a constructor. */
		initialize : function(options) {
			var that = this;
			//here the code 
		},
		
		/** Called after DOMÂ´s ready.*/
		onShowView : function() {
			var that = this;
			this.ui.inputBirthDate.date();

		
		},
		
		saveAndContinue : function() {
			this.save(true)
		},

		save : function(continua) {
			var that = this;
			var actor = that.getModel();

			if (this.isValid()) {
			this.ui.saveButton.button('loading');
				actor.save({}, {
					success : function(_model, _resp, _options) {
						util.showSuccessMessage('Actor salvo com sucesso!');
						that.clearForm();

						if (continua != true) {
							util.goPage('app/actors', true);
						}
					},

					error : function(_model, _resp, _options) {
						that.ui.saveButton.button('reset');
						util.showErrorMessage('Problema ao salvar registro',_resp);
					}
				});
			} 
		},
		
		getModel : function() {
			var that = this;
			var actor = that.model; 
			actor.set({
				id: this.ui.inputId.escape(),
		    	birthDate : this.ui.inputBirthDate.escape(), 
		    	name : this.ui.inputName.escape(), 
				
			});
			return actor;
		},
		
		customClearForm : function(){
			this.ui.saveButton.button('reset');
		},
	});

	return FormActors;
});